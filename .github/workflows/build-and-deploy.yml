name: Build and Deploy C# App to AWS ECR and ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-2
  AWS_ACCOUNT_ID: 851725518898
  ECR_REPOSITORY: test
  ECS_SERVICE: blackrise-test-service
  ECS_CLUSTER: blackrise-test-cluster
  ECS_TASK_DEFINITION: task-definition.json
  CONTAINER_NAME: blackrise-container

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::851725518898:role/Blackrise-OICD
          role-session-name: GithubSession
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore and Build
        run: |
          dotnet restore simple-csharp-app/SimpleApi/SimpleApi.csproj
          dotnet build simple-csharp-app/SimpleApi/SimpleApi.csproj --configuration Release
          dotnet publish simple-csharp-app/SimpleApi/SimpleApi.csproj --configuration Release --output ./out

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG simple-csharp-app/SimpleApi/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: false
