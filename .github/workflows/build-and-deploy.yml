name: Build and Push C# App to AWS ECR

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    #- name: Configure AWS credentials via OIDC
     # uses: aws-actions/configure-aws-credentials@v2
     # with:
     #   role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
     #   aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore and Build
      run: |
        dotnet restore simple-csharp-app/SimpleApi/SimpleApi.csproj
        dotnet build simple-csharp-app/SimpleApi/SimpleApi.csproj --configuration Release
        dotnet publish simple-csharp-app/SimpleApi/SimpleApi.csproj --configuration Release --output ./out


    - name: Authenticate to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY:latest simple-csharp-app/SimpleApi/

    - name: Tag Docker image
      run: |
        docker tag $ECR_REPOSITORY:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

    - name: Push Docker image to Amazon ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
